[gcode_macro _BEDFANVARS]
variable_threshold: 100        # Turn fans on "slow" until bed reaches this threshold. Then turn on "fast" when reached
variable_slowthreshold: 50     # Run fans on "slow" when temp is greater than this
variable_fast: 1.0             # Current of "fast" fan
variable_slow: 0.3             # Current of "slow" fan
variable_offthreshold: 45      # Run fan after bed is off until below this temp

[gcode_macro BED_FANS_OFF]
gcode:
  SET_FAN_SPEED FAN=BedFans SPEED=0

[gcode_macro BED_FANS_SLOW]
  # Vars
  {% set SLOW = printer["gcode_macro _BEDFANVARS"].slow|float %}
  SET_FAN_SPEED FAN=BedFans SPEED={SLOW}

[gcode_macro BED_FANS_FAST]
  # Vars
  {% set FAST = printer["gcode_macro _BEDFANVARS"].fast|float %}
  SET_FAN_SPEED FAN=BedFans SPEED={FAST}

[gcode_macro SET_BED_FANS]
gcode:
  # Params
  {% set TEMP = params.TEMP|default(0.0)|float %}

  SET_FAN_SPEED FAN=BedFans SPEED={TEMP}

[gcode_macro SET_HEATER_TEMPERATURE]
rename_existing: _SET_HEATER_TEMPERATURE
gcode:
  # Parameters
  {% set HEATER = params.HEATER|default("None") %}
  {% set TARGET = params.TARGET|default(0)|int %}

  # Vars
  {% set THRESHOLD = printer["gcode_macro _BEDFANVARS"].threshold|int %}
  {% set SLOWTHRESHOLD = printer["gcode_macro _BEDFANVARS"].slowthreshold|int %}
	
  {% if HEATER|lower == "extruder" %}
    M104 S{TARGET}
  {% elif HEATER|lower == "heater_bed" %}
    M99140 S{TARGET}
  {% else %}
    {action_respond_info("Heater %s not supported" % HEATER)}
  {% endif %}

	# Set fans to low if heater_bed temp is requested above threshold temp, and kick off monitoring loop.
  {% if HEATER|lower == "heater_bed" %}
    {% if TARGET >= THRESHOLD %}
    	BED_FANS_SLOW
    	UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=1
    {% elif TARGET >= SLOWTHRESHOLD %}	# added this to Ellis' original config to turn fans on low, but not start the monitoring loop for targets in PLA/PETG range. 
    	BED_FANS_SLOW
    {% else %}
    	TURN_OFF_HEATERS
    {% endif %}
  {% endif %}

# Override M190 (Wait for Bed Temperature)
# As a bonus, use TEMPERATURE_WAIT so we don't have to wait for PID to level off.
[gcode_macro M190]
rename_existing: M99190
gcode:
  # Parameters
  {% set S = params.S|int %}
  # Vars
  {% set THRESHOLD = printer["gcode_macro _BEDFANVARS"].threshold|int %}
	
  {% if S >= THRESHOLD %}
    BED_FANS_SLOW												             # >= Threshold temp: Low speed fans while heating 
  {% else %}
    TURN_OFF_HEATERS														 # < Threshold temp: Turn bed fans off
  {% endif %}                                        

  M140 {% for p in params
	%}{'%s%s' % (p, params[p])}{%
  endfor %}																	 # Set bed temp
	  
  {% if S != 0 %}
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={S|int} MAXIMUM={S|int + 5}	 # Wait for bed temp within 5 degrees
  {% endif %}

  # Post-heating fan speeds
  {% if S >= THRESHOLD %}								    
    BED_FANS_FAST															 # >= Threshold temp: Higher speed fans after heating finished
  {% endif %}
	
# Replace M140 (Set Bed Temperature) to just be an alias of SET_HEATER_TEMPERATURE (which has associated bed fan logic if enabled)
[gcode_macro M140]
rename_existing: M99140
gcode:
  # Parameters
  {% set S = params.S|float %}
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={S}
	
# Replace TURN_OFF_HEATERS
[gcode_macro TURN_OFF_HEATERS]
rename_existing: _TURN_OFF_HEATERS
gcode:
  _TURN_OFF_HEATERS											                                           # Turn off heaters
  {% if printer.heater_bed.temperature|int >= printer["gcode_macro _BEDFANVARS"].offthreshold %}		# If bed temp is above Off Theshold, start timer for bedfan for 5min and shutdown heaters
    UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=300	
  {% endif %}

################ Monitoring loop #####################

# Turns bed fans to "fast" speed once target bed temp is reached.
[delayed_gcode bedfanloop]
gcode:
  # Vars
  {% set THRESHOLD = printer["gcode_macro _BEDFANVARS"].threshold|int %}
  {% set COOLDOWN = printer["gcode_macro _BEDFANVARS"].offthreshold %}
	
  {% if printer.heater_bed.target >= THRESHOLD %}								            # Continue only if target temp greater than threshold.
    {% if printer.heater_bed.temperature|int >= (printer.heater_bed.target|int - 1) %}
    	BED_FANS_FAST										                               # If within 1 degree of target temp: Higher speed fans
    {% else %}
    	UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=5						               # If temp not reached yet: loop again
    {% endif %}
  {% elif printer.heater_bed.target == 0 %}								               # If TARGET is 0 (So fans turned off)
    {% if printer.heater_bed.temperature|int >= COOLDOWN %}							   # AND if Bed temperature is above Off Threshold
      	BED_FANS_SLOW												                       # Set to slow fanspeed
    	UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=300								   # start timer to check again in 5 min
    {% else %}
    	BED_FANS_OFF					                                                  # TARGET is 0 and bed temp is < Off Threshold turn Filter off and don't restart timer
    {% endif %}
  {% endif %}